group 'com.jamesncl.dev.flutter_embed_unity'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.8.20'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.kotlin.android'

android {
    namespace 'com.jamesncl.dev.flutter_embed_unity_android'
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    defaultConfig {
        minSdkVersion 22
    }

    dependencies {
        testImplementation 'org.jetbrains.kotlin:kotlin-test'
        // This is to include the .jar file in the libs folder containing Unity classes required
        // to compile the plugin (because for example we extend com.unity3d.player.UnityPlayer)
        // The .jar file is taken from the currently supported Unity Editor files: for Unity 2022.3
        // LTS on Windows this can be found at:
        // <Unity hub editors install folder>\2022.3.7f1\Editor\Data\PlaybackEngines\AndroidPlayer\Variations\mono\Development\Classes
        // Use compileOnly because we only need this to compile the plugin during development - at
        // runtime this dependency will be provided by the user's exported Unity project
        compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
               events "passed", "skipped", "failed", "standardOut", "standardError"
               outputs.upToDateWhen {false}
               showStandardStreams = true
            }
        }
    }
}
